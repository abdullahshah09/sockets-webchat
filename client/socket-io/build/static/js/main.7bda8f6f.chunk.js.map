{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Page","styled","div","Container","TextArea","textarea","Button","button","Form","form","MyRow","MyMessage","PartnerRow","PartnerMessage","App","useState","yourID","setYourID","messages","setMessages","message","setMessage","socketRef","useRef","useEffect","current","io","connect","on","id","console","log","oldMsgs","receivedMessage","map","index","body","onSubmit","e","preventDefault","messageObject","emit","value","onChange","target","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"guEAIA,IAAMA,EAAOC,IAAOC,IAAV,KASJC,EAAYF,IAAOC,IAAV,KAaTE,EAAWH,IAAOI,SAAV,KAmBRC,EAASL,IAAOM,OAAV,KAUNC,EAAOP,IAAOQ,KAAV,KAIJC,EAAQT,IAAOC,IAAV,KAOLS,EAAYV,IAAOC,IAAV,KAWTU,EAAaX,YAAOS,EAAPT,CAAH,KAIVY,EAAiBZ,IAAOC,IAAV,KAgFLY,EApEH,WAAO,IAAD,EACYC,qBADZ,mBACTC,EADS,KACDC,EADC,OAEgBF,mBAAS,IAFzB,mBAETG,EAFS,KAECC,EAFD,OAGcJ,mBAAS,IAHvB,mBAGTK,EAHS,KAGAC,EAHA,KAKVC,EAAYC,mBAiClB,OA/BAC,qBAAU,WACRF,EAAUG,QAAUC,IAAGC,QAAQ,KAE/BL,EAAUG,QAAQG,GAAG,WAAW,SAAAC,GAC9BZ,EAAUY,MAGZP,EAAUG,QAAQG,GAAG,WAAW,SAACR,GAC/BU,QAAQC,IAAI,QAKhB,SAAyBX,GACvBD,GAAY,SAAAa,GAAO,4BAAQA,GAAR,CAAiBZ,OALlCa,CAAgBb,QAEjB,IAqBD,eAACpB,EAAD,WACE,cAACG,EAAD,UACGe,EAASgB,KAAI,SAACd,EAASe,GACtB,OAAIf,EAAQS,KAAOb,EAEf,cAACN,EAAD,UACE,cAACC,EAAD,UACGS,EAAQgB,QAFDD,GAQd,cAACvB,EAAD,UACE,cAACC,EAAD,UACGO,EAAQgB,QAFID,QAQvB,eAAC3B,EAAD,CAAM6B,SApCV,SAAqBC,GACnBA,EAAEC,iBACF,IAAMC,EAAgB,CACpBJ,KAAMhB,EACNS,GAAIb,GAENK,EAAW,IACXC,EAAUG,QAAQgB,KAAK,eAAgBD,IA6BrC,UACE,cAACpC,EAAD,CAAUsC,MAAOtB,EAASuB,SA3BhC,SAAsBL,GACpBjB,EAAWiB,EAAEM,OAAOF,QA0BkCG,YAAY,qBAC9D,cAACvC,EAAD,0BC/IOwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7bda8f6f.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport io from \"socket.io-client\";\n\nconst Page = styled.div`\n  display: flex;\n  height: 100vh;\n  width: 100%;\n  align-items: center;\n  background-color: #46516e;\n  flex-direction: column;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 500px;\n  max-height: 500px;\n  overflow: auto;\n  width: 400px;\n  border: 1px solid lightgray;\n  border-radius: 10px;\n  padding-bottom: 10px;\n  margin-top: 25px;\n`;\n\nconst TextArea = styled.textarea`\n  width: 98%;\n  height: 100px;\n  border-radius: 10px;\n  margin-top: 10px;\n  padding-left: 10px;\n  padding-top: 10px;\n  font-size: 17px;\n  background-color: transparent;\n  border: 1px solid lightgray;\n  outline: none;\n  color: lightgray;\n  letter-spacing: 1px;\n  line-height: 20px;\n  ::placeholder {\n    color: lightgray;\n  }\n`;\n\nconst Button = styled.button`\n  background-color: pink;\n  width: 100%;\n  border: none;\n  height: 50px;\n  border-radius: 10px;\n  color: #46516e;\n  font-size: 17px;\n`;\n\nconst Form = styled.form`\n  width: 400px;\n`;\n\nconst MyRow = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10px;\n`;\n\nconst MyMessage = styled.div`\n  width: 45%;\n  background-color: pink;\n  color: #46516e;\n  padding: 10px;\n  margin-right: 5px;\n  text-align: center;\n  border-top-right-radius: 10%;\n  border-bottom-right-radius: 10%;\n`;\n\nconst PartnerRow = styled(MyRow)`\n  justify-content: flex-start;\n`;\n\nconst PartnerMessage = styled.div`\n  width: 45%;\n  background-color: transparent;\n  color: lightgray;\n  border: 1px solid lightgray;\n  padding: 10px;\n  margin-left: 5px;\n  text-align: center;\n  border-top-left-radius: 10%;\n  border-bottom-left-radius: 10%;\n`;\n\nconst App = () => {\n  const [yourID, setYourID] = useState();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  const socketRef = useRef();\n\n  useEffect(() => {\n    socketRef.current = io.connect('/');\n\n    socketRef.current.on(\"your id\", id => {\n      setYourID(id);\n    })\n\n    socketRef.current.on(\"message\", (message) => {\n      console.log(\"here\");\n      receivedMessage(message);\n    })\n  }, []);\n\n  function receivedMessage(message) {\n    setMessages(oldMsgs => [...oldMsgs, message]);\n  }\n\n  function sendMessage(e) {\n    e.preventDefault();\n    const messageObject = {\n      body: message,\n      id: yourID,\n    };\n    setMessage(\"\");\n    socketRef.current.emit(\"send message\", messageObject);\n  }\n\n  function handleChange(e) {\n    setMessage(e.target.value);\n  }\n\n  return (\n    <Page>\n      <Container>\n        {messages.map((message, index) => {\n          if (message.id === yourID) {\n            return (\n              <MyRow key={index}>\n                <MyMessage>\n                  {message.body}\n                </MyMessage>\n              </MyRow>\n            )\n          }\n          return (\n            <PartnerRow key={index}>\n              <PartnerMessage>\n                {message.body}\n              </PartnerMessage>\n            </PartnerRow>\n          )\n        })}\n      </Container>\n      <Form onSubmit={sendMessage}>\n        <TextArea value={message} onChange={handleChange} placeholder=\"Say something...\" />\n        <Button>Send</Button>\n      </Form>\n    </Page>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}